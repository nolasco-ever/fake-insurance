[{"/Users/evernolasco/fake-insurance/client/src/index.js":"1","/Users/evernolasco/fake-insurance/client/src/App.js":"2","/Users/evernolasco/fake-insurance/client/src/reportWebVitals.js":"3","/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js":"4","/Users/evernolasco/fake-insurance/client/src/components/quote.js":"5","/Users/evernolasco/fake-insurance/client/src/components/loginPage.js":"6","/Users/evernolasco/fake-insurance/client/src/components/quoteForm.js":"7","/Users/evernolasco/fake-insurance/client/src/reducers/index.js":"8","/Users/evernolasco/fake-insurance/client/src/reducers/posts.js":"9","/Users/evernolasco/fake-insurance/client/src/actions/posts.js":"10","/Users/evernolasco/fake-insurance/client/src/api/index.js":"11","/Users/evernolasco/fake-insurance/client/src/components/errorMessage.js":"12","/Users/evernolasco/fake-insurance/client/src/actions/auth.js":"13","/Users/evernolasco/fake-insurance/client/src/reducers/auth.js":"14"},{"size":733,"mtime":1620609792293,"results":"15","hashOfConfig":"16"},{"size":1245,"mtime":1620702244006,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1620173398956,"results":"18","hashOfConfig":"16"},{"size":5816,"mtime":1620716412279,"results":"19","hashOfConfig":"16"},{"size":8256,"mtime":1620717829452,"results":"20","hashOfConfig":"16"},{"size":8062,"mtime":1620717603957,"results":"21","hashOfConfig":"16"},{"size":6619,"mtime":1620713641778,"results":"22","hashOfConfig":"16"},{"size":147,"mtime":1620694380548,"results":"23","hashOfConfig":"16"},{"size":408,"mtime":1620634336236,"results":"24","hashOfConfig":"16"},{"size":964,"mtime":1620696439721,"results":"25","hashOfConfig":"16"},{"size":473,"mtime":1620696420692,"results":"26","hashOfConfig":"16"},{"size":248,"mtime":1620683121912,"results":"27","hashOfConfig":"16"},{"size":544,"mtime":1620698871630,"results":"28","hashOfConfig":"16"},{"size":503,"mtime":1620700592222,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ifbjhe",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/evernolasco/fake-insurance/client/src/index.js",[],["62","63"],"/Users/evernolasco/fake-insurance/client/src/App.js",[],"/Users/evernolasco/fake-insurance/client/src/reportWebVitals.js",[],"/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js",["64","65","66"],"import React, { useState } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//import components\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\nimport desktopLogo from \"../images/logo-2.png\";\nimport mobileLogo from \"../images/logo-1.png\";\n\nfunction QuotesPage(){\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    //get current user data\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n    console.log(\"USER ID: \", user.result._id);\n\n    //fetch quotes from database\n    const posts = useSelector((state) => state.posts);\n    console.log(\"THESE QUOTES: \", posts);\n\n    //state to toggle the form on and off, and to input information to the form\n    const [toggleAdd, setToggleAdd] = useState(false);\n    const [doAnimate, setDoAnimate] = useState(false);\n\n    //initialize postForm\n    const [postForm, setPostForm] = useState({\n        userID: user.result._id,\n        dot_number: \"\",\n        nbr_of_pwr_units: \"\",\n        val_of_pwr_units: \"\",\n        premium_amount: \"\",\n        premium_tax: \"\",\n        premium_total: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        driver1_name: \"\",\n        driver1_age: \"\",\n        driver2_name: \"\",\n        driver2_age: \"\",\n        driver3_name: \"\",\n        driver3_age: \"\",\n        driver4_name: \"\",\n        driver4_age: \"\",\n        driver5_name: \"\",\n        driver5_age: \"\"\n    });\n\n    //log user out and redirect to homepage\n    function logOut(){\n        dispatch({type: 'LOGOUT'});\n        history.push('/');\n        setUser(\"\");\n        setPostForm(\"\");\n    }\n\n    function toggleAddForm(){\n        if(toggleAdd){\n            setToggleAdd(false);\n        }\n        else{\n            setToggleAdd(true);\n        }\n\n        setDoAnimate(true);\n    }\n\n    //Animation to open and close the 'Add a Quote' form\n    const openAddForm = useSpring({\n        height: \"85vh\",\n        opacity: 1,\n\n        from: {\n            height: \"0vh\",\n            opacity: 0\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    const closeAddForm = useSpring({\n        height: \"0vh\",\n        opacity: 0,\n\n        from: {\n            height: \"85vh\",\n            opacity: 1\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    function animationFunction(num){\n        if(num === 1){\n            if(doAnimate === true){\n              return openAddForm;\n            }\n          }\n          else if (num === 2){\n            if(doAnimate === true){\n              return closeAddForm;\n            }\n          }\n    }\n\n    return(\n        <div>\n            <img id=\"desktop-logo\" src={desktopLogo}></img>\n            <div className=\"mobile-logo-container\"><img id=\"mobile-logo\" src={mobileLogo}></img></div>\n            <header>\n                <form className=\"log-out-form\">\n                    <button onClick={logOut}>Log Out</button>\n                </form>\n\n                <div className=\"title-line\">\n                    <div className=\"title-subtitle\">\n                        <h1>{user.result.name+\"'s Quotes\"}</h1>\n                        <p>{\" - \"+user.result.company_name}</p>\n                    </div>\n                    <button onClick={toggleAddForm} style={toggleAdd ? {backgroundColor: \"#E84855\"} : null}>{toggleAdd ? \"Discard\" : \"Add a Quote\"}</button>\n                </div>\n            </header>\n\n            <animated.form style={toggleAdd ? animationFunction(1) : animationFunction(2)} className=\"add-quote-form\">\n                <QuoteForm\n                    postForm={postForm}\n                    setPostForm={setPostForm}\n                    doAnimate={doAnimate}\n                    setDoAnimate={setDoAnimate}\n                    setToggleAdd={setToggleAdd}\n                />\n            </animated.form>\n\n            {/* Display all posts */}\n            {posts.map((item, index) => {\n                if(posts[index].userID === user.result._id){\n                    return <Quote\n                        key={index}\n                        id={posts[index]._id}\n                        dot_number={posts[index].dot_number}\n                        nbr_of_pwr_units={posts[index].nbr_of_pwr_units}\n                        val_of_pwr_units={posts[index].val_of_pwr_units}\n                        premium_amount={posts[index].premium_amount}\n                        premium_tax={posts[index].premium_tax}\n                        premium_total={posts[index].premium_total}\n                        street={posts[index].street}\n                        city={posts[index].city}\n                        state={posts[index].state}\n                        zipcode={posts[index].zipcode}\n                        driver1_name={posts[index].driver1_name}\n                        driver1_age={posts[index].driver1_age}\n                        driver2_name={posts[index].driver2_name}\n                        driver2_age={posts[index].driver2_age}\n                        driver3_name={posts[index].driver3_name}\n                        driver3_age={posts[index].driver3_age}\n                        driver4_name={posts[index].driver4_name}\n                        driver4_age={posts[index].driver4_age}\n                        driver5_name={posts[index].driver5_name}\n                        driver5_age={posts[index].driver5_age}\n                        created_at={posts[index].created_at}\n                        doAnimate={doAnimate}\n                    />\n                }\n            })}\n\n            \n        </div>\n    );\n}\n\nexport default QuotesPage;","/Users/evernolasco/fake-insurance/client/src/components/quote.js",[],"/Users/evernolasco/fake-insurance/client/src/components/loginPage.js",["67"],"/Users/evernolasco/fake-insurance/client/src/components/quoteForm.js",[],"/Users/evernolasco/fake-insurance/client/src/reducers/index.js",[],"/Users/evernolasco/fake-insurance/client/src/reducers/posts.js",["68"],"export default (posts = [], action) => {\n    switch(action.type){\n        case 'FETCH_ALL':\n            return action.payload;\n        case 'CREATE':\n            return [...posts, action.payload];\n        case 'DELETE':\n            //Remove all quotes where the id === requested data id\n            return posts.filter((post) => post.id !== action.payload);\n        default:\n            return posts;\n    }\n}","/Users/evernolasco/fake-insurance/client/src/actions/posts.js",[],"/Users/evernolasco/fake-insurance/client/src/api/index.js",[],"/Users/evernolasco/fake-insurance/client/src/components/errorMessage.js",[],"/Users/evernolasco/fake-insurance/client/src/actions/auth.js",[],"/Users/evernolasco/fake-insurance/client/src/reducers/auth.js",["69"],"export default (state = {authData: null}, action) => {\n    switch(action.type){\n        case 'AUTH':\n            //get the profile info and set it to local storage\n            localStorage.setItem('user', JSON.stringify({...action?.data}));\n            return {...state, authData: action?.data};\n        case 'LOGOUT':\n            //clear the user data from local storage\n            localStorage.clear();\n            return {...state, authData: null};\n        default:\n            return state;\n    }\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":122,"column":13,"nodeType":"76","endLine":122,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":123,"column":52,"nodeType":"76","endLine":123,"endColumn":91},{"ruleId":"77","severity":1,"message":"78","line":149,"column":38,"nodeType":"79","messageId":"80","endLine":149,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":231,"column":13,"nodeType":"76","endLine":231,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":13,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":14,"endColumn":2},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]