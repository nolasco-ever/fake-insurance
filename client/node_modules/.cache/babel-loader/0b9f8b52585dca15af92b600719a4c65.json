{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSpring, animated } from 'react-spring'; //import components\n\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuotesPage({\n  driverInfo,\n  setDriverInfo\n}) {\n  _s();\n\n  //states to toggle the form on and off, and to input information to the form\n  const [toggleAdd, setToggleAdd] = useState(false);\n  const [postForm, setPostForm] = useState([]); //arrays that hold field names for driver name and age. Used when adding a variable to driverInfo array\n\n  var names = [\"name1\", \"name2\", \"name3\", \"name4\", \"name5\"];\n  var ages = [\"age1\", \"age2\", \"age3\", \"age4\", \"age5\"];\n\n  function toggleAddForm() {\n    if (toggleAdd) {\n      setToggleAdd(false);\n    } else {\n      setToggleAdd(true);\n    }\n  }\n\n  function addDriverField(e) {\n    e.preventDefault(); // prevents page from reloading\n\n    setDriverInfo([...driverInfo, {\n      fName: \"\",\n      lName: \"\",\n      age: \"\",\n      id: Math.random() * 1000\n    }]);\n    console.log(\"DRIVERINFO: \", driverInfo);\n  } //change the value of the postForm state and the input text box\n\n\n  function inputTextHandler(e) {\n    setPostForm(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  } //Animation to open and close the 'Add a Quote' form\n\n\n  const openAddForm = useSpring({\n    height: \"85vh\",\n    opacity: 1,\n    from: {\n      height: \"0vh\",\n      opacity: 0\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n  const closeAddForm = useSpring({\n    height: \"0vh\",\n    opacity: 0,\n    from: {\n      height: \"85vh\",\n      opacity: 1\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"log-out-form\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ever's Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAddForm,\n          style: toggleAdd ? {\n            backgroundColor: \"#E84855\"\n          } : null,\n          children: toggleAdd ? \"Discard\" : \"Add a Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.form, {\n      style: toggleAdd ? openAddForm : closeAddForm,\n      className: \"add-quote-form\",\n      children: /*#__PURE__*/_jsxDEV(QuoteForm, {\n        postForm: postForm,\n        setPostForm: setPostForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuotesPage, \"OQUr/nYpZtdB+8U++WmHX65XlnY=\", false, function () {\n  return [useSpring, useSpring];\n});\n\n_c = QuotesPage;\nexport default QuotesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesPage\");","map":{"version":3,"sources":["/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js"],"names":["React","useState","useSpring","animated","Quote","QuoteForm","QuotesPage","driverInfo","setDriverInfo","toggleAdd","setToggleAdd","postForm","setPostForm","names","ages","toggleAddForm","addDriverField","e","preventDefault","fName","lName","age","id","Math","random","console","log","inputTextHandler","prevState","target","name","value","openAddForm","height","opacity","from","config","mass","tension","friction","reset","closeAddForm","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useSpring, animated} from 'react-spring';\n\n//import components\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\n\nfunction QuotesPage({driverInfo, setDriverInfo}){\n    //states to toggle the form on and off, and to input information to the form\n    const [toggleAdd, setToggleAdd] = useState(false);\n    const [postForm, setPostForm] = useState([]);\n\n    //arrays that hold field names for driver name and age. Used when adding a variable to driverInfo array\n    var names = [\"name1\", \"name2\", \"name3\", \"name4\", \"name5\"];\n    var ages = [\"age1\", \"age2\", \"age3\", \"age4\", \"age5\"];\n\n    function toggleAddForm(){\n        if(toggleAdd){\n            setToggleAdd(false);\n        }\n        else{\n            setToggleAdd(true);\n        }\n    }\n\n    function addDriverField(e){\n    e.preventDefault(); // prevents page from reloading\n      setDriverInfo([\n        ...driverInfo, {fName: \"\", lName: \"\", age: \"\", id: Math.random()*1000},\n      ]);\n\n      console.log(\"DRIVERINFO: \", driverInfo);\n    }\n\n    //change the value of the postForm state and the input text box\n    function inputTextHandler(e){\n        setPostForm((prevState) => ({...prevState, [e.target.name]: e.target.value}))\n    }\n\n    //Animation to open and close the 'Add a Quote' form\n    const openAddForm = useSpring({\n        height: \"85vh\",\n        opacity: 1,\n\n        from: {\n            height: \"0vh\",\n            opacity: 0\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    const closeAddForm = useSpring({\n        height: \"0vh\",\n        opacity: 0,\n\n        from: {\n            height: \"85vh\",\n            opacity: 1\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    return(\n        <div>\n            <header>\n                <form className=\"log-out-form\">\n                    <button>Log Out</button>\n                </form>\n\n                <div className=\"title-line\">\n                    <h1>Ever's Quotes</h1>\n                    <button onClick={toggleAddForm} style={toggleAdd ? {backgroundColor: \"#E84855\"} : null}>{toggleAdd ? \"Discard\" : \"Add a Quote\"}</button>\n                </div>\n            </header>\n\n            <animated.form style={toggleAdd ? openAddForm : closeAddForm} className=\"add-quote-form\">\n                <QuoteForm\n                    postForm={postForm}\n                    setPostForm={setPostForm}\n                />\n            </animated.form>\n\n            <Quote/>\n            <Quote/>\n            <Quote/>\n\n            \n        </div>\n    );\n}\n\nexport default QuotesPage;"]},"metadata":{},"sourceType":"module"}