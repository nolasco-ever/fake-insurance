{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from 'react-spring';\nimport { useSelector } from 'react-redux'; //import components\n\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuotesPage() {\n  _s();\n\n  //get current user data\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  console.log(\"USER: \", user); //fetch quotes from database\n\n  const posts = useSelector(state => state.posts);\n  console.log(\"THESE QUOTES: \", posts); //state to toggle the form on and off, and to input information to the form\n\n  const [toggleAdd, setToggleAdd] = useState(false); //initialize postForm\n\n  const [postForm, setPostForm] = useState({\n    userID: user.result._id,\n    dot_number: \"\",\n    nbr_of_pwr_units: \"\",\n    val_of_pwr_units: \"\",\n    premium_amount: \"\",\n    premium_tax: \"\",\n    premium_total: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    driver1_name: \"\",\n    driver1_age: \"\",\n    driver2_name: \"\",\n    driver2_age: \"\",\n    driver3_name: \"\",\n    driver3_age: \"\",\n    driver4_name: \"\",\n    driver4_age: \"\",\n    driver5_name: \"\",\n    driver5_age: \"\"\n  });\n\n  function toggleAddForm() {\n    if (toggleAdd) {\n      setToggleAdd(false);\n    } else {\n      setToggleAdd(true);\n    }\n  } //Animation to open and close the 'Add a Quote' form\n\n\n  const openAddForm = useSpring({\n    height: \"85vh\",\n    opacity: 1,\n    from: {\n      height: \"0vh\",\n      opacity: 0\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n  const closeAddForm = useSpring({\n    height: \"0vh\",\n    opacity: 0,\n    from: {\n      height: \"85vh\",\n      opacity: 1\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"log-out-form\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.result.name + \"'s Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAddForm,\n          style: toggleAdd ? {\n            backgroundColor: \"#E84855\"\n          } : null,\n          children: toggleAdd ? \"Discard\" : \"Add a Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.form, {\n      style: toggleAdd ? openAddForm : closeAddForm,\n      className: \"add-quote-form\",\n      children: /*#__PURE__*/_jsxDEV(QuoteForm, {\n        postForm: postForm,\n        setPostForm: setPostForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), posts.map((item, index) => /*#__PURE__*/_jsxDEV(Quote, {\n      id: posts[index]._id,\n      dot_number: posts[index].dot_number,\n      nbr_of_pwr_units: posts[index].nbr_of_pwr_units,\n      val_of_pwr_units: posts[index].val_of_pwr_units,\n      premium_amount: posts[index].premium_amount,\n      premium_tax: posts[index].premium_tax,\n      premium_total: posts[index].premium_total,\n      street: posts[index].street,\n      city: posts[index].city,\n      state: posts[index].state,\n      zipcode: posts[index].zipcode,\n      driver1_name: posts[index].driver1_name,\n      driver1_age: posts[index].driver1_age,\n      driver2_name: posts[index].driver2_name,\n      driver2_age: posts[index].driver2_age,\n      driver3_name: posts[index].driver3_name,\n      driver3_age: posts[index].driver3_age,\n      driver4_name: posts[index].driver4_name,\n      driver4_age: posts[index].driver4_age,\n      driver5_name: posts[index].driver5_name,\n      driver5_age: posts[index].driver5_age,\n      created_at: posts[index].created_at\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuotesPage, \"+6STz9HEKVEsmrdEv4sRYGkCMKE=\", false, function () {\n  return [useSelector, useSpring, useSpring];\n});\n\n_c = QuotesPage;\nexport default QuotesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesPage\");","map":{"version":3,"sources":["/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js"],"names":["React","useState","useEffect","useSpring","animated","useSelector","Quote","QuoteForm","QuotesPage","user","setUser","JSON","parse","localStorage","getItem","console","log","posts","state","toggleAdd","setToggleAdd","postForm","setPostForm","userID","result","_id","dot_number","nbr_of_pwr_units","val_of_pwr_units","premium_amount","premium_tax","premium_total","street","city","zipcode","driver1_name","driver1_age","driver2_name","driver2_age","driver3_name","driver3_age","driver4_name","driver4_age","driver5_name","driver5_age","toggleAddForm","openAddForm","height","opacity","from","config","mass","tension","friction","reset","closeAddForm","name","backgroundColor","map","item","index","created_at"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,cAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AACjB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAD,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,IAAtB,EAHiB,CAKjB;;AACA,QAAMQ,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,KAA9B,EAPiB,CASjB;;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C,CAViB,CAYjB;;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AACrCsB,IAAAA,MAAM,EAAEd,IAAI,CAACe,MAAL,CAAYC,GADiB;AAErCC,IAAAA,UAAU,EAAE,EAFyB;AAGrCC,IAAAA,gBAAgB,EAAE,EAHmB;AAIrCC,IAAAA,gBAAgB,EAAE,EAJmB;AAKrCC,IAAAA,cAAc,EAAE,EALqB;AAMrCC,IAAAA,WAAW,EAAE,EANwB;AAOrCC,IAAAA,aAAa,EAAE,EAPsB;AAQrCC,IAAAA,MAAM,EAAE,EAR6B;AASrCC,IAAAA,IAAI,EAAE,EAT+B;AAUrCf,IAAAA,KAAK,EAAE,EAV8B;AAWrCgB,IAAAA,OAAO,EAAE,EAX4B;AAYrCC,IAAAA,YAAY,EAAE,EAZuB;AAarCC,IAAAA,WAAW,EAAE,EAbwB;AAcrCC,IAAAA,YAAY,EAAE,EAduB;AAerCC,IAAAA,WAAW,EAAE,EAfwB;AAgBrCC,IAAAA,YAAY,EAAE,EAhBuB;AAiBrCC,IAAAA,WAAW,EAAE,EAjBwB;AAkBrCC,IAAAA,YAAY,EAAE,EAlBuB;AAmBrCC,IAAAA,WAAW,EAAE,EAnBwB;AAoBrCC,IAAAA,YAAY,EAAE,EApBuB;AAqBrCC,IAAAA,WAAW,EAAE;AArBwB,GAAD,CAAxC;;AAwBA,WAASC,aAAT,GAAwB;AACpB,QAAG1B,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAGI;AACAA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GA5CgB,CA8CjB;;;AACA,QAAM0B,WAAW,GAAG3C,SAAS,CAAC;AAC1B4C,IAAAA,MAAM,EAAE,MADkB;AAE1BC,IAAAA,OAAO,EAAE,CAFiB;AAI1BC,IAAAA,IAAI,EAAE;AACFF,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,OAAO,EAAE;AAFP,KAJoB;AAS1BE,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,GAFL;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KATkB;AAc1BC,IAAAA,KAAK,EAAE;AAdmB,GAAD,CAA7B;AAiBA,QAAMC,YAAY,GAAGpD,SAAS,CAAC;AAC3B4C,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,OAAO,EAAE,CAFkB;AAI3BC,IAAAA,IAAI,EAAE;AACFF,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,OAAO,EAAE;AAFP,KAJqB;AAS3BE,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,GAFL;AAGJC,MAAAA,QAAQ,EAAE;AAHN,KATmB;AAc3BC,IAAAA,KAAK,EAAE;AAdoB,GAAD,CAA9B;AAiBA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,oBAAK7C,IAAI,CAACe,MAAL,CAAYgC,IAAZ,GAAiB;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEX,aAAjB;AAAgC,UAAA,KAAK,EAAE1B,SAAS,GAAG;AAACsC,YAAAA,eAAe,EAAE;AAAlB,WAAH,GAAkC,IAAlF;AAAA,oBAAyFtC,SAAS,GAAG,SAAH,GAAe;AAAjH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAEA,SAAS,GAAG2B,WAAH,GAAiBS,YAAhD;AAA8D,MAAA,SAAS,EAAC,gBAAxE;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,QAAQ,EAAElC,QADd;AAEI,QAAA,WAAW,EAAEC;AAFjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ,EAoBKL,KAAK,CAACyC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,KAAD;AAEI,MAAA,EAAE,EAAE3C,KAAK,CAAC2C,KAAD,CAAL,CAAanC,GAFrB;AAGI,MAAA,UAAU,EAAER,KAAK,CAAC2C,KAAD,CAAL,CAAalC,UAH7B;AAII,MAAA,gBAAgB,EAAET,KAAK,CAAC2C,KAAD,CAAL,CAAajC,gBAJnC;AAKI,MAAA,gBAAgB,EAAEV,KAAK,CAAC2C,KAAD,CAAL,CAAahC,gBALnC;AAMI,MAAA,cAAc,EAAEX,KAAK,CAAC2C,KAAD,CAAL,CAAa/B,cANjC;AAOI,MAAA,WAAW,EAAEZ,KAAK,CAAC2C,KAAD,CAAL,CAAa9B,WAP9B;AAQI,MAAA,aAAa,EAAEb,KAAK,CAAC2C,KAAD,CAAL,CAAa7B,aARhC;AASI,MAAA,MAAM,EAAEd,KAAK,CAAC2C,KAAD,CAAL,CAAa5B,MATzB;AAUI,MAAA,IAAI,EAAEf,KAAK,CAAC2C,KAAD,CAAL,CAAa3B,IAVvB;AAWI,MAAA,KAAK,EAAEhB,KAAK,CAAC2C,KAAD,CAAL,CAAa1C,KAXxB;AAYI,MAAA,OAAO,EAAED,KAAK,CAAC2C,KAAD,CAAL,CAAa1B,OAZ1B;AAaI,MAAA,YAAY,EAAEjB,KAAK,CAAC2C,KAAD,CAAL,CAAazB,YAb/B;AAcI,MAAA,WAAW,EAAElB,KAAK,CAAC2C,KAAD,CAAL,CAAaxB,WAd9B;AAeI,MAAA,YAAY,EAAEnB,KAAK,CAAC2C,KAAD,CAAL,CAAavB,YAf/B;AAgBI,MAAA,WAAW,EAAEpB,KAAK,CAAC2C,KAAD,CAAL,CAAatB,WAhB9B;AAiBI,MAAA,YAAY,EAAErB,KAAK,CAAC2C,KAAD,CAAL,CAAarB,YAjB/B;AAkBI,MAAA,WAAW,EAAEtB,KAAK,CAAC2C,KAAD,CAAL,CAAapB,WAlB9B;AAmBI,MAAA,YAAY,EAAEvB,KAAK,CAAC2C,KAAD,CAAL,CAAanB,YAnB/B;AAoBI,MAAA,WAAW,EAAExB,KAAK,CAAC2C,KAAD,CAAL,CAAalB,WApB9B;AAqBI,MAAA,YAAY,EAAEzB,KAAK,CAAC2C,KAAD,CAAL,CAAajB,YArB/B;AAsBI,MAAA,WAAW,EAAE1B,KAAK,CAAC2C,KAAD,CAAL,CAAahB,WAtB9B;AAuBI,MAAA,UAAU,EAAE3B,KAAK,CAAC2C,KAAD,CAAL,CAAaC;AAvB7B,OACSD,KADT;AAAA;AAAA;AAAA;AAAA,YADH,CApBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH;;GArIQpD,U;UAMSH,W,EAyCMF,S,EAiBCA,S;;;KAhEhBK,U;AAuIT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useSelector } from 'react-redux';\n\n//import components\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\n\nfunction QuotesPage(){\n    //get current user data\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n    console.log(\"USER: \", user);\n\n    //fetch quotes from database\n    const posts = useSelector((state) => state.posts);\n    console.log(\"THESE QUOTES: \", posts);\n\n    //state to toggle the form on and off, and to input information to the form\n    const [toggleAdd, setToggleAdd] = useState(false);\n\n    //initialize postForm\n    const [postForm, setPostForm] = useState({\n        userID: user.result._id,\n        dot_number: \"\",\n        nbr_of_pwr_units: \"\",\n        val_of_pwr_units: \"\",\n        premium_amount: \"\",\n        premium_tax: \"\",\n        premium_total: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        driver1_name: \"\",\n        driver1_age: \"\",\n        driver2_name: \"\",\n        driver2_age: \"\",\n        driver3_name: \"\",\n        driver3_age: \"\",\n        driver4_name: \"\",\n        driver4_age: \"\",\n        driver5_name: \"\",\n        driver5_age: \"\"\n    });\n\n    function toggleAddForm(){\n        if(toggleAdd){\n            setToggleAdd(false);\n        }\n        else{\n            setToggleAdd(true);\n        }\n    }\n\n    //Animation to open and close the 'Add a Quote' form\n    const openAddForm = useSpring({\n        height: \"85vh\",\n        opacity: 1,\n\n        from: {\n            height: \"0vh\",\n            opacity: 0\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    const closeAddForm = useSpring({\n        height: \"0vh\",\n        opacity: 0,\n\n        from: {\n            height: \"85vh\",\n            opacity: 1\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    return(\n        <div>\n            <header>\n                <form className=\"log-out-form\">\n                    <button>Log Out</button>\n                </form>\n\n                <div className=\"title-line\">\n                    <h1>{user.result.name+\"'s Quotes\"}</h1>\n                    <button onClick={toggleAddForm} style={toggleAdd ? {backgroundColor: \"#E84855\"} : null}>{toggleAdd ? \"Discard\" : \"Add a Quote\"}</button>\n                </div>\n            </header>\n\n            <animated.form style={toggleAdd ? openAddForm : closeAddForm} className=\"add-quote-form\">\n                <QuoteForm\n                    postForm={postForm}\n                    setPostForm={setPostForm}\n                />\n            </animated.form>\n\n            {/* Display all posts */}\n            {posts.map((item, index) => (\n                <Quote\n                    key={index}\n                    id={posts[index]._id}\n                    dot_number={posts[index].dot_number}\n                    nbr_of_pwr_units={posts[index].nbr_of_pwr_units}\n                    val_of_pwr_units={posts[index].val_of_pwr_units}\n                    premium_amount={posts[index].premium_amount}\n                    premium_tax={posts[index].premium_tax}\n                    premium_total={posts[index].premium_total}\n                    street={posts[index].street}\n                    city={posts[index].city}\n                    state={posts[index].state}\n                    zipcode={posts[index].zipcode}\n                    driver1_name={posts[index].driver1_name}\n                    driver1_age={posts[index].driver1_age}\n                    driver2_name={posts[index].driver2_name}\n                    driver2_age={posts[index].driver2_age}\n                    driver3_name={posts[index].driver3_name}\n                    driver3_age={posts[index].driver3_age}\n                    driver4_name={posts[index].driver4_name}\n                    driver4_age={posts[index].driver4_age}\n                    driver5_name={posts[index].driver5_name}\n                    driver5_age={posts[index].driver5_age}\n                    created_at={posts[index].created_at}\n                />\n            ))}\n\n            \n        </div>\n    );\n}\n\nexport default QuotesPage;"]},"metadata":{},"sourceType":"module"}