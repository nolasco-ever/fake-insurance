{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSpring, animated } from 'react-spring';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom'; //import components\n\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\nimport desktopLogo from \"../images/logo-2.png\";\nimport mobileLogo from \"../images/logo-1.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuotesPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory(); //get current user data\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n  console.log(\"USER ID: \", user.result._id); //fetch quotes from database\n\n  const posts = useSelector(state => state.posts);\n  console.log(\"THESE QUOTES: \", posts); //state to toggle the form on and off, and to input information to the form\n\n  const [toggleAdd, setToggleAdd] = useState(false);\n  const [doAnimate, setDoAnimate] = useState(false); //initialize postForm\n\n  const [postForm, setPostForm] = useState({\n    userID: user.result._id,\n    dot_number: \"\",\n    nbr_of_pwr_units: \"\",\n    val_of_pwr_units: \"\",\n    premium_amount: \"\",\n    premium_tax: \"\",\n    premium_total: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    driver1_name: \"\",\n    driver1_age: \"\",\n    driver2_name: \"\",\n    driver2_age: \"\",\n    driver3_name: \"\",\n    driver3_age: \"\",\n    driver4_name: \"\",\n    driver4_age: \"\",\n    driver5_name: \"\",\n    driver5_age: \"\"\n  }); //log user out and redirect to homepage\n\n  function logOut() {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    history.push('/');\n    setUser(\"\");\n    setPostForm(\"\");\n  }\n\n  function toggleAddForm() {\n    if (toggleAdd) {\n      setToggleAdd(false);\n    } else {\n      setToggleAdd(true);\n    }\n\n    setDoAnimate(true);\n  } //Animation to open and close the 'Add a Quote' form\n\n\n  const openAddForm = useSpring({\n    height: \"85vh\",\n    opacity: 1,\n    from: {\n      height: \"0vh\",\n      opacity: 0\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n  const closeAddForm = useSpring({\n    height: \"0vh\",\n    opacity: 0,\n    from: {\n      height: \"85vh\",\n      opacity: 1\n    },\n    config: {\n      mass: 1,\n      tension: 170,\n      friction: 20\n    },\n    reset: true\n  });\n\n  function animationFunction(num) {\n    if (num === 1) {\n      if (doAnimate === true) {\n        return openAddForm;\n      }\n    } else if (num === 2) {\n      if (doAnimate === true) {\n        return closeAddForm;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: desktopLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: mobileLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"log-out-form\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-subtitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: user.result.name + \"'s Quotes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" - \" + user.result.company_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAddForm,\n          style: toggleAdd ? {\n            backgroundColor: \"#E84855\"\n          } : null,\n          children: toggleAdd ? \"Discard\" : \"Add a Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.form, {\n      style: toggleAdd ? animationFunction(1) : animationFunction(2),\n      className: \"add-quote-form\",\n      children: /*#__PURE__*/_jsxDEV(QuoteForm, {\n        postForm: postForm,\n        setPostForm: setPostForm,\n        doAnimate: doAnimate,\n        setDoAnimate: setDoAnimate,\n        setToggleAdd: setToggleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), posts.map((item, index) => {\n      if (posts[index].userID === user.result._id) {\n        return /*#__PURE__*/_jsxDEV(Quote, {\n          id: posts[index]._id,\n          dot_number: posts[index].dot_number,\n          nbr_of_pwr_units: posts[index].nbr_of_pwr_units,\n          val_of_pwr_units: posts[index].val_of_pwr_units,\n          premium_amount: posts[index].premium_amount,\n          premium_tax: posts[index].premium_tax,\n          premium_total: posts[index].premium_total,\n          street: posts[index].street,\n          city: posts[index].city,\n          state: posts[index].state,\n          zipcode: posts[index].zipcode,\n          driver1_name: posts[index].driver1_name,\n          driver1_age: posts[index].driver1_age,\n          driver2_name: posts[index].driver2_name,\n          driver2_age: posts[index].driver2_age,\n          driver3_name: posts[index].driver3_name,\n          driver3_age: posts[index].driver3_age,\n          driver4_name: posts[index].driver4_name,\n          driver4_age: posts[index].driver4_age,\n          driver5_name: posts[index].driver5_name,\n          driver5_age: posts[index].driver5_age,\n          created_at: posts[index].created_at,\n          doAnimate: doAnimate\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 28\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuotesPage, \"z0Rd3q4rlSZbolP//I3xF5oYwpY=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSpring, useSpring];\n});\n\n_c = QuotesPage;\nexport default QuotesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesPage\");","map":{"version":3,"sources":["/Users/evernolasco/fake-insurance/client/src/components/quotesPage.js"],"names":["React","useState","useSpring","animated","useSelector","useDispatch","useHistory","Quote","QuoteForm","desktopLogo","mobileLogo","QuotesPage","dispatch","history","user","setUser","JSON","parse","localStorage","getItem","console","log","result","_id","posts","state","toggleAdd","setToggleAdd","doAnimate","setDoAnimate","postForm","setPostForm","userID","dot_number","nbr_of_pwr_units","val_of_pwr_units","premium_amount","premium_tax","premium_total","street","city","zipcode","driver1_name","driver1_age","driver2_name","driver2_age","driver3_name","driver3_age","driver4_name","driver4_age","driver5_name","driver5_age","logOut","type","push","toggleAddForm","openAddForm","height","opacity","from","config","mass","tension","friction","reset","closeAddForm","animationFunction","num","name","company_name","backgroundColor","map","item","index","created_at"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//import components\nimport Quote from \"./quote\";\nimport QuoteForm from \"./quoteForm\";\nimport desktopLogo from \"../images/logo-2.png\";\nimport mobileLogo from \"../images/logo-1.png\";\n\nfunction QuotesPage(){\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    //get current user data\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\n    console.log(\"USER ID: \", user.result._id);\n\n    //fetch quotes from database\n    const posts = useSelector((state) => state.posts);\n    console.log(\"THESE QUOTES: \", posts);\n\n    //state to toggle the form on and off, and to input information to the form\n    const [toggleAdd, setToggleAdd] = useState(false);\n    const [doAnimate, setDoAnimate] = useState(false);\n\n    //initialize postForm\n    const [postForm, setPostForm] = useState({\n        userID: user.result._id,\n        dot_number: \"\",\n        nbr_of_pwr_units: \"\",\n        val_of_pwr_units: \"\",\n        premium_amount: \"\",\n        premium_tax: \"\",\n        premium_total: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        driver1_name: \"\",\n        driver1_age: \"\",\n        driver2_name: \"\",\n        driver2_age: \"\",\n        driver3_name: \"\",\n        driver3_age: \"\",\n        driver4_name: \"\",\n        driver4_age: \"\",\n        driver5_name: \"\",\n        driver5_age: \"\"\n    });\n\n    //log user out and redirect to homepage\n    function logOut(){\n        dispatch({type: 'LOGOUT'});\n        history.push('/');\n        setUser(\"\");\n        setPostForm(\"\");\n    }\n\n    function toggleAddForm(){\n        if(toggleAdd){\n            setToggleAdd(false);\n        }\n        else{\n            setToggleAdd(true);\n        }\n\n        setDoAnimate(true);\n    }\n\n    //Animation to open and close the 'Add a Quote' form\n    const openAddForm = useSpring({\n        height: \"85vh\",\n        opacity: 1,\n\n        from: {\n            height: \"0vh\",\n            opacity: 0\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    const closeAddForm = useSpring({\n        height: \"0vh\",\n        opacity: 0,\n\n        from: {\n            height: \"85vh\",\n            opacity: 1\n        },\n\n        config: {\n            mass: 1,\n            tension: 170,\n            friction: 20\n        },\n        reset: true\n    })\n\n    function animationFunction(num){\n        if(num === 1){\n            if(doAnimate === true){\n              return openAddForm;\n            }\n          }\n          else if (num === 2){\n            if(doAnimate === true){\n              return closeAddForm;\n            }\n          }\n    }\n\n    return(\n        <div>\n            <img src={desktopLogo}></img>\n            <img src={mobileLogo}></img>\n            <header>\n                <form className=\"log-out-form\">\n                    <button onClick={logOut}>Log Out</button>\n                </form>\n\n                <div className=\"title-line\">\n                    <div className=\"title-subtitle\">\n                        <h1>{user.result.name+\"'s Quotes\"}</h1>\n                        <p>{\" - \"+user.result.company_name}</p>\n                    </div>\n                    <button onClick={toggleAddForm} style={toggleAdd ? {backgroundColor: \"#E84855\"} : null}>{toggleAdd ? \"Discard\" : \"Add a Quote\"}</button>\n                </div>\n            </header>\n\n            <animated.form style={toggleAdd ? animationFunction(1) : animationFunction(2)} className=\"add-quote-form\">\n                <QuoteForm\n                    postForm={postForm}\n                    setPostForm={setPostForm}\n                    doAnimate={doAnimate}\n                    setDoAnimate={setDoAnimate}\n                    setToggleAdd={setToggleAdd}\n                />\n            </animated.form>\n\n            {/* Display all posts */}\n            {posts.map((item, index) => {\n                if(posts[index].userID === user.result._id){\n                    return <Quote\n                        key={index}\n                        id={posts[index]._id}\n                        dot_number={posts[index].dot_number}\n                        nbr_of_pwr_units={posts[index].nbr_of_pwr_units}\n                        val_of_pwr_units={posts[index].val_of_pwr_units}\n                        premium_amount={posts[index].premium_amount}\n                        premium_tax={posts[index].premium_tax}\n                        premium_total={posts[index].premium_total}\n                        street={posts[index].street}\n                        city={posts[index].city}\n                        state={posts[index].state}\n                        zipcode={posts[index].zipcode}\n                        driver1_name={posts[index].driver1_name}\n                        driver1_age={posts[index].driver1_age}\n                        driver2_name={posts[index].driver2_name}\n                        driver2_age={posts[index].driver2_age}\n                        driver3_name={posts[index].driver3_name}\n                        driver3_age={posts[index].driver3_age}\n                        driver4_name={posts[index].driver4_name}\n                        driver4_age={posts[index].driver4_age}\n                        driver5_name={posts[index].driver5_name}\n                        driver5_age={posts[index].driver5_age}\n                        created_at={posts[index].created_at}\n                        doAnimate={doAnimate}\n                    />\n                }\n            })}\n\n            \n        </div>\n    );\n}\n\nexport default QuotesPage;"]},"metadata":{},"sourceType":"module"}